// generated with ast extension for cup
// version 0.8
// 13/5/2019 23:19:57


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Mulop Mulop);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(FactorActualParametersOptional FactorActualParametersOptional);
    public void visit(Matched Matched);
    public void visit(EnumValue EnumValue);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(StatementElseOptional StatementElseOptional);
    public void visit(FactorExpressionOptional FactorExpressionOptional);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(ExpressionAddTermList ExpressionAddTermList);
    public void visit(ConditionOptional ConditionOptional);
    public void visit(VarName VarName);
    public void visit(StatementList StatementList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(ConstDeclarationValue ConstDeclarationValue);
    public void visit(Addop Addop);
    public void visit(ConditionFactRelopExpressionOptional ConditionFactRelopExpressionOptional);
    public void visit(ProgramMethodsList ProgramMethodsList);
    public void visit(Factor Factor);
    public void visit(DesigantorStatement DesigantorStatement);
    public void visit(Designator Designator);
    public void visit(ProgramListVarDeclaration ProgramListVarDeclaration);
    public void visit(Term Term);
    public void visit(ArrayDeclaresOptional ArrayDeclaresOptional);
    public void visit(MethodParams MethodParams);
    public void visit(Condition Condition);
    public void visit(ActualParametersOptional ActualParametersOptional);
    public void visit(MinusOptional MinusOptional);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ListVarDeclaration ListVarDeclaration);
    public void visit(ActualParamList ActualParamList);
    public void visit(ConstDeclValue ConstDeclValue);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(MethodTypeDeclaration MethodTypeDeclaration);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(MethodParamsOptional MethodParamsOptional);
    public void visit(ActualPars ActualPars);
    public void visit(StatementNumConstOptional StatementNumConstOptional);
    public void visit(ActualParametersExpressionList ActualParametersExpressionList);
    public void visit(VarListElem VarListElem);
    public void visit(ExpressionOptional ExpressionOptional);
    public void visit(Statement Statement);
    public void visit(DesignatorStatementOptional DesignatorStatementOptional);
    public void visit(ConditionFactList ConditionFactList);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(MethodParamsList MethodParamsList);
    public void visit(FormPars FormPars);
    public void visit(MethodParam MethodParam);
    public void visit(EnumDeclarationList EnumDeclarationList);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEquals RelopLessEquals);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterEquals RelopGreaterEquals);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEquals RelopNotEquals);
    public void visit(RelopEquals RelopEquals);
    public void visit(AssignOperation AssignOperation);
    public void visit(Type Type);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(DesignatorDeclaration DesignatorDeclaration);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(DesignatorStatementOptionalNoValue DesignatorStatementOptionalNoValue);
    public void visit(DesignatorStatementOptionalValue DesignatorStatementOptionalValue);
    public void visit(ConditionOptionalNoValue ConditionOptionalNoValue);
    public void visit(ConditionOptionalValue ConditionOptionalValue);
    public void visit(ConditionFactRelopExpressionOptionalNoValue ConditionFactRelopExpressionOptionalNoValue);
    public void visit(ConditionFactRelopExpressionOptionalValue ConditionFactRelopExpressionOptionalValue);
    public void visit(MinusOptionalNoValue MinusOptionalNoValue);
    public void visit(MinusOptionalValue MinusOptionalValue);
    public void visit(FactorActualParemeterOptionalNoValue FactorActualParemeterOptionalNoValue);
    public void visit(FactorActualParametersOptionalValue FactorActualParametersOptionalValue);
    public void visit(FactorExpressOptionalNoValue FactorExpressOptionalNoValue);
    public void visit(FactorExpressOptionalValue FactorExpressOptionalValue);
    public void visit(FactorExpression FactorExpression);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(FactorDesignating FactorDesignating);
    public void visit(TermMulEpsion TermMulEpsion);
    public void visit(TermMulListMember TermMulListMember);
    public void visit(ExpressionAddTermEpsilon ExpressionAddTermEpsilon);
    public void visit(ExpressionAddTermListMember ExpressionAddTermListMember);
    public void visit(Expression Expression);
    public void visit(ConditionFact ConditionFact);
    public void visit(ConditionListFactEpsilon ConditionListFactEpsilon);
    public void visit(ConditionFacListMember ConditionFacListMember);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionTermEpsilon ConditionTermEpsilon);
    public void visit(ConditionTermListMember ConditionTermListMember);
    public void visit(Conditioning Conditioning);
    public void visit(ExpressionOptionalEpsilon ExpressionOptionalEpsilon);
    public void visit(ExpressionOptionalValue ExpressionOptionalValue);
    public void visit(ActualParametersEpsilon ActualParametersEpsilon);
    public void visit(ActualParametersOptionalValue ActualParametersOptionalValue);
    public void visit(ActualParametersExpressionListEpsilon ActualParametersExpressionListEpsilon);
    public void visit(ActualParametersExpressionListMember ActualParametersExpressionListMember);
    public void visit(ActualParameters ActualParameters);
    public void visit(DesignatorDecrementing DesignatorDecrementing);
    public void visit(DesignatorIncrementing DesignatorIncrementing);
    public void visit(DesignatorActual DesignatorActual);
    public void visit(DesignatorAssignExprError DesignatorAssignExprError);
    public void visit(DesignatorAssignExpression DesignatorAssignExpression);
    public void visit(StatementElseOptionalNoValue StatementElseOptionalNoValue);
    public void visit(StatementElseOptionalValue StatementElseOptionalValue);
    public void visit(StatementNumConstOptionNoValue StatementNumConstOptionNoValue);
    public void visit(StatementNumConstOptionalValue StatementNumConstOptionalValue);
    public void visit(StatementBrace StatementBrace);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreaking StatementBreaking);
    public void visit(StatementFor StatementFor);
    public void visit(StatementIf StatementIf);
    public void visit(StatementDesignating StatementDesignating);
    public void visit(StatementEpsilon StatementEpsilon);
    public void visit(StatementListDeclaring StatementListDeclaring);
    public void visit(MethodParamDeclaring MethodParamDeclaring);
    public void visit(MethodParamsEpsilon MethodParamsEpsilon);
    public void visit(MethodParametersListing MethodParametersListing);
    public void visit(MethodParametersDeclaring MethodParametersDeclaring);
    public void visit(ArrayDeclaringOptionalNoValue ArrayDeclaringOptionalNoValue);
    public void visit(ArrayDeclaringOptionalValue ArrayDeclaringOptionalValue);
    public void visit(NoMethodParams NoMethodParams);
    public void visit(MethodOptionalParamsDeclaring MethodOptionalParamsDeclaring);
    public void visit(MethodVoidDeclarating MethodVoidDeclarating);
    public void visit(MethodTypeDeclarating MethodTypeDeclarating);
    public void visit(MethodDeclarating MethodDeclarating);
    public void visit(MethodDeclaratingEpsilon MethodDeclaratingEpsilon);
    public void visit(MethodDeclaratingList MethodDeclaratingList);
    public void visit(NoEnumDeclaringList NoEnumDeclaringList);
    public void visit(EnumDeclaratingListMember EnumDeclaratingListMember);
    public void visit(EnumDeclaringNoValue EnumDeclaringNoValue);
    public void visit(EnumDeclaringValue EnumDeclaringValue);
    public void visit(EnumName EnumName);
    public void visit(EnumDeclarating EnumDeclarating);
    public void visit(VarArray VarArray);
    public void visit(VarMember VarMember);
    public void visit(VarDeclListError2 VarDeclListError2);
    public void visit(VarDeclListError1 VarDeclListError1);
    public void visit(VarListMultiple VarListMultiple);
    public void visit(VarListSingle VarListSingle);
    public void visit(VarDeclaratingError VarDeclaratingError);
    public void visit(VarValidDeclaration VarValidDeclaration);
    public void visit(VarsDeclaratingEpsilon VarsDeclaratingEpsilon);
    public void visit(VarsDeclarating VarsDeclarating);
    public void visit(NoConstDeclaration NoConstDeclaration);
    public void visit(ConstDeclarationListMember ConstDeclarationListMember);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstVarDeclarating ConstVarDeclarating);
    public void visit(NoProgramVarDeclarating NoProgramVarDeclarating);
    public void visit(ProgramEnumDeclarating ProgramEnumDeclarating);
    public void visit(ProgramVarDeclarating ProgramVarDeclarating);
    public void visit(ProgramConstVarDeclarating ProgramConstVarDeclarating);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
