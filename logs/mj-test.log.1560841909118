INFO  09:11:31,035 - Compiling source file: /home/matijalukic/Desktop/ppProjekat/projekat/MJCompiler/test/program.mj
INFO  09:11:31,052 - #2 program
INFO  09:11:31,052 - #45 test301
INFO  09:11:31,052 - #10 enum
INFO  09:11:31,052 - #45 Broj
INFO  09:11:31,052 - #40 {
INFO  09:11:31,052 - #45 NULA
INFO  09:11:31,053 - #37 ,
INFO  09:11:31,053 - #45 JEDAN
INFO  09:11:31,053 - #37 ,
INFO  09:11:31,053 - #45 PET
INFO  09:11:31,053 - #29 =
INFO  09:11:31,053 - #44 5
INFO  09:11:31,053 - #37 ,
INFO  09:11:31,053 - #45 DESET
INFO  09:11:31,054 - #29 =
INFO  09:11:31,054 - #44 10
INFO  09:11:31,054 - #41 }
INFO  09:11:31,054 - #7 const
INFO  09:11:31,054 - #45 int
INFO  09:11:31,054 - #45 jedan
INFO  09:11:31,054 - #29 =
INFO  09:11:31,054 - #44 1
INFO  09:11:31,054 - #36 ;
INFO  09:11:31,055 - #7 const
INFO  09:11:31,055 - #45 int
INFO  09:11:31,055 - #45 pet
INFO  09:11:31,055 - #29 =
INFO  09:11:31,055 - #44 5
INFO  09:11:31,055 - #36 ;
INFO  09:11:31,055 - #45 int
INFO  09:11:31,055 - #45 niz
INFO  09:11:31,055 - #42 [
INFO  09:11:31,055 - #43 ]
INFO  09:11:31,055 - #36 ;
INFO  09:11:31,055 - #45 char
INFO  09:11:31,056 - #45 nizch
INFO  09:11:31,056 - #42 [
INFO  09:11:31,056 - #43 ]
INFO  09:11:31,056 - #36 ;
INFO  09:11:31,056 - #45 bool
INFO  09:11:31,056 - #45 test
INFO  09:11:31,056 - #36 ;
INFO  09:11:31,056 - #40 {
INFO  09:11:31,056 - #6 void
INFO  09:11:31,056 - #45 div
INFO  09:11:31,056 - #38 (
INFO  09:11:31,056 - #45 int
INFO  09:11:31,056 - #45 broj
INFO  09:11:31,056 - #37 ,
INFO  09:11:31,057 - #45 int
INFO  09:11:31,057 - #45 broj2
INFO  09:11:31,057 - #39 )
INFO  09:11:31,057 - #40 {
INFO  09:11:31,057 - #5 return
INFO  09:11:31,057 - #45 broj
INFO  09:11:31,058 - #27 /
INFO  09:11:31,058 - #45 broj2
INFO  09:11:31,058 - #36 ;
INFO  09:11:31,059 - #41 }
INFO  09:11:31,059 - #45 int
INFO  09:11:31,059 - #45 inc
INFO  09:11:31,059 - #38 (
INFO  09:11:31,059 - #45 int
INFO  09:11:31,059 - #45 broj
INFO  09:11:31,059 - #39 )
INFO  09:11:31,059 - #40 {
INFO  09:11:31,059 - #5 return
INFO  09:11:31,059 - #45 broj
INFO  09:11:31,060 - #22 +
INFO  09:11:31,060 - #44 5
INFO  09:11:31,060 - #36 ;
INFO  09:11:31,060 - #41 }
INFO  09:11:31,060 - #6 void
INFO  09:11:31,060 - #45 mul
INFO  09:11:31,060 - #38 (
INFO  09:11:31,060 - #45 int
INFO  09:11:31,060 - #45 arr
INFO  09:11:31,060 - #42 [
INFO  09:11:31,060 - #43 ]
INFO  09:11:31,060 - #37 ,
INFO  09:11:31,060 - #45 int
INFO  09:11:31,060 - #45 index
INFO  09:11:31,060 - #37 ,
INFO  09:11:31,061 - #45 char
INFO  09:11:31,061 - #45 b
INFO  09:11:31,061 - #39 )
INFO  09:11:31,061 - #40 {
INFO  09:11:31,061 - #41 }
INFO  09:11:31,061 - #41 }
INFO  09:11:31,062 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramVarDeclarating(
    ProgramVarDeclarating(
      ProgramVarDeclarating(
        ProgramConstVarDeclarating(
          ProgramConstVarDeclarating(
            ProgramEnumDeclarating(
              NoProgramVarDeclarating(
              ) [NoProgramVarDeclarating]
              EnumDeclarating(
                EnumName(
                 Broj
                ) [EnumName]
                EnumDeclaringNoValue(
                 NULA
                ) [EnumDeclaringNoValue]
                EnumDeclaratingListMember(
                  EnumDeclaratingListMember(
                    EnumDeclaratingListMember(
                      NoEnumDeclaringList(
                      ) [NoEnumDeclaringList]
                      EnumDeclaringNoValue(
                       JEDAN
                      ) [EnumDeclaringNoValue]
                    ) [EnumDeclaratingListMember]
                    EnumDeclaringValue(
                     PET
                      AssignOperation(
                      ) [AssignOperation]
                     5
                    ) [EnumDeclaringValue]
                  ) [EnumDeclaratingListMember]
                  EnumDeclaringValue(
                   DESET
                    AssignOperation(
                    ) [AssignOperation]
                   10
                  ) [EnumDeclaringValue]
                ) [EnumDeclaratingListMember]
              ) [EnumDeclarating]
            ) [ProgramEnumDeclarating]
            ConstVarDeclarating(
              NumConst(
                Type(
                 int
                ) [Type]
               jedan
                AssignOperation(
                ) [AssignOperation]
               1
              ) [NumConst]
              NoConstDeclaration(
              ) [NoConstDeclaration]
            ) [ConstVarDeclarating]
          ) [ProgramConstVarDeclarating]
          ConstVarDeclarating(
            NumConst(
              Type(
               int
              ) [Type]
             pet
              AssignOperation(
              ) [AssignOperation]
             5
            ) [NumConst]
            NoConstDeclaration(
            ) [NoConstDeclaration]
          ) [ConstVarDeclarating]
        ) [ProgramConstVarDeclarating]
        VarValidDeclaration(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarArray(
             niz
            ) [VarArray]
          ) [VarListSingle]
        ) [VarValidDeclaration]
      ) [ProgramVarDeclarating]
      VarValidDeclaration(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarArray(
           nizch
          ) [VarArray]
        ) [VarListSingle]
      ) [VarValidDeclaration]
    ) [ProgramVarDeclarating]
    VarValidDeclaration(
      Type(
       bool
      ) [Type]
      VarListSingle(
        VarMember(
         test
        ) [VarMember]
      ) [VarListSingle]
    ) [VarValidDeclaration]
  ) [ProgramVarDeclarating]
  MethodDeclaratingList(
    MethodDeclaratingList(
      MethodDeclaratingList(
        MethodDeclaratingEpsilon(
        ) [MethodDeclaratingEpsilon]
        MethodDeclarating(
          MethodVoidDeclarating(
           div
          ) [MethodVoidDeclarating]
          MethodOptionalParamsDeclaring(
            MethodParametersDeclaring(
              MethodParamDeclaring(
                Type(
                 int
                ) [Type]
               broj
                ArrayDeclaringOptionalNoValue(
                ) [ArrayDeclaringOptionalNoValue]
              ) [MethodParamDeclaring]
              MethodParametersListing(
                MethodParamsEpsilon(
                ) [MethodParamsEpsilon]
                MethodParamDeclaring(
                  Type(
                   int
                  ) [Type]
                 broj2
                  ArrayDeclaringOptionalNoValue(
                  ) [ArrayDeclaringOptionalNoValue]
                ) [MethodParamDeclaring]
              ) [MethodParametersListing]
            ) [MethodParametersDeclaring]
          ) [MethodOptionalParamsDeclaring]
          VarsDeclaratingEpsilon(
          ) [VarsDeclaratingEpsilon]
          StatementListDeclaring(
            StatementEpsilon(
            ) [StatementEpsilon]
            StatementReturn(
              ExpressionOptionalValue(
                Expression(
                  MinusOptionalNoValue(
                  ) [MinusOptionalNoValue]
                  ExpressionAddTermEpsilon(
                    TermMulListMember(
                      TermMulEpsion(
                        FactorDesignating(
                          DesignatorDeclaration(
                           broj
                          ) [DesignatorDeclaration]
                          FactorActualParemeterOptionalNoValue(
                          ) [FactorActualParemeterOptionalNoValue]
                        ) [FactorDesignating]
                      ) [TermMulEpsion]
                      MulopDiv(
                      ) [MulopDiv]
                      FactorDesignating(
                        DesignatorDeclaration(
                         broj2
                        ) [DesignatorDeclaration]
                        FactorActualParemeterOptionalNoValue(
                        ) [FactorActualParemeterOptionalNoValue]
                      ) [FactorDesignating]
                    ) [TermMulListMember]
                  ) [ExpressionAddTermEpsilon]
                ) [Expression]
              ) [ExpressionOptionalValue]
            ) [StatementReturn]
          ) [StatementListDeclaring]
        ) [MethodDeclarating]
      ) [MethodDeclaratingList]
      MethodDeclarating(
        MethodTypeDeclarating(
          Type(
           int
          ) [Type]
         inc
        ) [MethodTypeDeclarating]
        MethodOptionalParamsDeclaring(
          MethodParametersDeclaring(
            MethodParamDeclaring(
              Type(
               int
              ) [Type]
             broj
              ArrayDeclaringOptionalNoValue(
              ) [ArrayDeclaringOptionalNoValue]
            ) [MethodParamDeclaring]
            MethodParamsEpsilon(
            ) [MethodParamsEpsilon]
          ) [MethodParametersDeclaring]
        ) [MethodOptionalParamsDeclaring]
        VarsDeclaratingEpsilon(
        ) [VarsDeclaratingEpsilon]
        StatementListDeclaring(
          StatementEpsilon(
          ) [StatementEpsilon]
          StatementReturn(
            ExpressionOptionalValue(
              Expression(
                MinusOptionalNoValue(
                ) [MinusOptionalNoValue]
                ExpressionAddTermListMember(
                  ExpressionAddTermEpsilon(
                    TermMulEpsion(
                      FactorDesignating(
                        DesignatorDeclaration(
                         broj
                        ) [DesignatorDeclaration]
                        FactorActualParemeterOptionalNoValue(
                        ) [FactorActualParemeterOptionalNoValue]
                      ) [FactorDesignating]
                    ) [TermMulEpsion]
                  ) [ExpressionAddTermEpsilon]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulEpsion(
                    FactorNum(
                     5
                    ) [FactorNum]
                  ) [TermMulEpsion]
                ) [ExpressionAddTermListMember]
              ) [Expression]
            ) [ExpressionOptionalValue]
          ) [StatementReturn]
        ) [StatementListDeclaring]
      ) [MethodDeclarating]
    ) [MethodDeclaratingList]
    MethodDeclarating(
      MethodVoidDeclarating(
       mul
      ) [MethodVoidDeclarating]
      MethodOptionalParamsDeclaring(
        MethodParametersDeclaring(
          MethodParamDeclaring(
            Type(
             int
            ) [Type]
           arr
            ArrayDeclaringOptionalValue(
            ) [ArrayDeclaringOptionalValue]
          ) [MethodParamDeclaring]
          MethodParametersListing(
            MethodParametersListing(
              MethodParamsEpsilon(
              ) [MethodParamsEpsilon]
              MethodParamDeclaring(
                Type(
                 int
                ) [Type]
               index
                ArrayDeclaringOptionalNoValue(
                ) [ArrayDeclaringOptionalNoValue]
              ) [MethodParamDeclaring]
            ) [MethodParametersListing]
            MethodParamDeclaring(
              Type(
               char
              ) [Type]
             b
              ArrayDeclaringOptionalNoValue(
              ) [ArrayDeclaringOptionalNoValue]
            ) [MethodParamDeclaring]
          ) [MethodParametersListing]
        ) [MethodParametersDeclaring]
      ) [MethodOptionalParamsDeclaring]
      VarsDeclaratingEpsilon(
      ) [VarsDeclaratingEpsilon]
      StatementEpsilon(
      ) [StatementEpsilon]
    ) [MethodDeclarating]
  ) [MethodDeclaratingList]
) [Program]
INFO  09:11:31,066 - Koristi se lokalna promenljiva Var broj: int, 0, 1  na liniji 16
INFO  09:11:31,066 - Koristi se lokalna promenljiva Var broj2: int, 1, 1  na liniji 16
ERROR 09:11:31,067 - Metoda vraca vrednost neodgovarajuceg tipa na liniji 15
INFO  09:11:31,067 - Koristi se lokalna promenljiva Var broj: int, 0, 1  na liniji 21
INFO  09:11:31,067 - Print calls = 0
ERROR 09:11:31,067 - Parsiranje NIJE uspesno zavrseno!
