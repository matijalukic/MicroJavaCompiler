INFO  01:02:03,661 - Compiling source file: /home/matijalukic/Desktop/ppProjekat/projekat/MJCompiler/test/program.mj
INFO  01:02:03,680 - #2 program
INFO  01:02:03,680 - #45 test301
INFO  01:02:03,680 - #10 enum
INFO  01:02:03,681 - #45 Broj
INFO  01:02:03,681 - #40 {
INFO  01:02:03,681 - #45 NULA
INFO  01:02:03,681 - #37 ,
INFO  01:02:03,681 - #45 JEDAN
INFO  01:02:03,681 - #37 ,
INFO  01:02:03,681 - #45 PET
INFO  01:02:03,681 - #29 =
INFO  01:02:03,681 - #44 5
INFO  01:02:03,682 - #37 ,
INFO  01:02:03,682 - #45 DESET
INFO  01:02:03,682 - #29 =
INFO  01:02:03,682 - #44 10
INFO  01:02:03,682 - #41 }
INFO  01:02:03,682 - #7 const
INFO  01:02:03,682 - #45 int
INFO  01:02:03,682 - #45 jedan
INFO  01:02:03,682 - #29 =
INFO  01:02:03,682 - #44 10
INFO  01:02:03,682 - #36 ;
INFO  01:02:03,683 - #7 const
INFO  01:02:03,683 - #45 char
INFO  01:02:03,683 - #45 aa
INFO  01:02:03,683 - #29 =
INFO  01:02:03,683 - #46 2
INFO  01:02:03,683 - #36 ;
INFO  01:02:03,683 - #7 const
INFO  01:02:03,683 - #45 int
INFO  01:02:03,683 - #45 pet
INFO  01:02:03,683 - #29 =
INFO  01:02:03,683 - #44 5
INFO  01:02:03,683 - #36 ;
INFO  01:02:03,683 - #7 const
INFO  01:02:03,683 - #45 bool
INFO  01:02:03,683 - #45 tri
INFO  01:02:03,684 - #29 =
INFO  01:02:03,684 - #47 false
INFO  01:02:03,684 - #36 ;
INFO  01:02:03,684 - #45 int
INFO  01:02:03,684 - #45 matija
INFO  01:02:03,684 - #36 ;
INFO  01:02:03,684 - #45 int
INFO  01:02:03,684 - #45 niz
INFO  01:02:03,684 - #42 [
INFO  01:02:03,684 - #43 ]
INFO  01:02:03,684 - #36 ;
INFO  01:02:03,684 - #45 char
INFO  01:02:03,684 - #45 niz3
INFO  01:02:03,684 - #42 [
INFO  01:02:03,684 - #43 ]
INFO  01:02:03,684 - #36 ;
INFO  01:02:03,685 - #45 Broj
INFO  01:02:03,685 - #45 enumInstance
INFO  01:02:03,685 - #36 ;
INFO  01:02:03,685 - #40 {
INFO  01:02:03,685 - #45 int
INFO  01:02:03,685 - #45 inc
INFO  01:02:03,685 - #38 (
INFO  01:02:03,685 - #39 )
INFO  01:02:03,685 - #45 int
INFO  01:02:03,686 - #45 broj
INFO  01:02:03,686 - #36 ;
INFO  01:02:03,686 - #45 Broj
INFO  01:02:03,686 - #45 enumInstance
INFO  01:02:03,686 - #36 ;
INFO  01:02:03,686 - #40 {
INFO  01:02:03,686 - #45 broj
INFO  01:02:03,686 - #29 =
INFO  01:02:03,686 - #45 broj
INFO  01:02:03,687 - #26 *
INFO  01:02:03,687 - #45 enumInstance
INFO  01:02:03,687 - #36 ;
INFO  01:02:03,688 - #5 return
INFO  01:02:03,688 - #45 broj
INFO  01:02:03,688 - #22 +
INFO  01:02:03,688 - #45 Broj
INFO  01:02:03,688 - #19 .
INFO  01:02:03,688 - #45 JEDAN
INFO  01:02:03,688 - #36 ;
INFO  01:02:03,689 - #41 }
INFO  01:02:03,689 - #6 void
INFO  01:02:03,689 - #45 mul
INFO  01:02:03,689 - #38 (
INFO  01:02:03,689 - #39 )
INFO  01:02:03,689 - #45 int
INFO  01:02:03,689 - #45 nikola
INFO  01:02:03,689 - #36 ;
INFO  01:02:03,689 - #40 {
INFO  01:02:03,689 - #45 matija
INFO  01:02:03,689 - #29 =
INFO  01:02:03,689 - #45 matija
INFO  01:02:03,689 - #22 +
INFO  01:02:03,689 - #44 3
INFO  01:02:03,689 - #36 ;
INFO  01:02:03,689 - #45 matija
INFO  01:02:03,690 - #29 =
INFO  01:02:03,690 - #45 nikola
INFO  01:02:03,690 - #22 +
INFO  01:02:03,690 - #45 niz
INFO  01:02:03,690 - #42 [
INFO  01:02:03,690 - #44 2
INFO  01:02:03,690 - #43 ]
INFO  01:02:03,690 - #36 ;
INFO  01:02:03,690 - #45 matija
INFO  01:02:03,690 - #29 =
INFO  01:02:03,690 - #44 3
INFO  01:02:03,690 - #22 +
INFO  01:02:03,690 - #44 3
INFO  01:02:03,690 - #36 ;
INFO  01:02:03,690 - #4 read
INFO  01:02:03,690 - #38 (
INFO  01:02:03,690 - #45 matija
INFO  01:02:03,690 - #39 )
INFO  01:02:03,690 - #36 ;
INFO  01:02:03,690 - #4 read
INFO  01:02:03,691 - #38 (
INFO  01:02:03,691 - #45 niz
INFO  01:02:03,693 - #42 [
INFO  01:02:03,693 - #44 2
INFO  01:02:03,693 - #43 ]
INFO  01:02:03,693 - #39 )
INFO  01:02:03,693 - #36 ;
INFO  01:02:03,693 - #5 return
INFO  01:02:03,693 - #44 2
INFO  01:02:03,693 - #36 ;
INFO  01:02:03,693 - #41 }
INFO  01:02:03,693 - #41 }
INFO  01:02:03,695 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramVarDeclarating(
    ProgramVarDeclarating(
      ProgramVarDeclarating(
        ProgramVarDeclarating(
          ProgramConstVarDeclarating(
            ProgramConstVarDeclarating(
              ProgramConstVarDeclarating(
                ProgramConstVarDeclarating(
                  ProgramEnumDeclarating(
                    NoProgramVarDeclarating(
                    ) [NoProgramVarDeclarating]
                    EnumDeclarating(
                      EnumName(
                       Broj
                      ) [EnumName]
                      EnumDeclaringNoValue(
                       NULA
                      ) [EnumDeclaringNoValue]
                      EnumDeclaratingListMember(
                        EnumDeclaratingListMember(
                          EnumDeclaratingListMember(
                            NoEnumDeclaringList(
                            ) [NoEnumDeclaringList]
                            EnumDeclaringNoValue(
                             JEDAN
                            ) [EnumDeclaringNoValue]
                          ) [EnumDeclaratingListMember]
                          EnumDeclaringValue(
                           PET
                            AssignOperation(
                            ) [AssignOperation]
                           5
                          ) [EnumDeclaringValue]
                        ) [EnumDeclaratingListMember]
                        EnumDeclaringValue(
                         DESET
                          AssignOperation(
                          ) [AssignOperation]
                         10
                        ) [EnumDeclaringValue]
                      ) [EnumDeclaratingListMember]
                    ) [EnumDeclarating]
                  ) [ProgramEnumDeclarating]
                  ConstVarDeclarating(
                    NumConst(
                      Type(
                       int
                      ) [Type]
                     jedan
                      AssignOperation(
                      ) [AssignOperation]
                     10
                    ) [NumConst]
                    NoConstDeclaration(
                    ) [NoConstDeclaration]
                  ) [ConstVarDeclarating]
                ) [ProgramConstVarDeclarating]
                ConstVarDeclarating(
                  CharConst(
                    Type(
                     char
                    ) [Type]
                   aa
                    AssignOperation(
                    ) [AssignOperation]
                   2
                  ) [CharConst]
                  NoConstDeclaration(
                  ) [NoConstDeclaration]
                ) [ConstVarDeclarating]
              ) [ProgramConstVarDeclarating]
              ConstVarDeclarating(
                NumConst(
                  Type(
                   int
                  ) [Type]
                 pet
                  AssignOperation(
                  ) [AssignOperation]
                 5
                ) [NumConst]
                NoConstDeclaration(
                ) [NoConstDeclaration]
              ) [ConstVarDeclarating]
            ) [ProgramConstVarDeclarating]
            ConstVarDeclarating(
              BoolConst(
                Type(
                 bool
                ) [Type]
               tri
                AssignOperation(
                ) [AssignOperation]
               false
              ) [BoolConst]
              NoConstDeclaration(
              ) [NoConstDeclaration]
            ) [ConstVarDeclarating]
          ) [ProgramConstVarDeclarating]
          VarValidDeclaration(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarMember(
               matija
              ) [VarMember]
            ) [VarListSingle]
          ) [VarValidDeclaration]
        ) [ProgramVarDeclarating]
        VarValidDeclaration(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarArray(
             niz
            ) [VarArray]
          ) [VarListSingle]
        ) [VarValidDeclaration]
      ) [ProgramVarDeclarating]
      VarValidDeclaration(
        Type(
         char
        ) [Type]
        VarListSingle(
          VarArray(
           niz3
          ) [VarArray]
        ) [VarListSingle]
      ) [VarValidDeclaration]
    ) [ProgramVarDeclarating]
    VarValidDeclaration(
      Type(
       Broj
      ) [Type]
      VarListSingle(
        VarMember(
         enumInstance
        ) [VarMember]
      ) [VarListSingle]
    ) [VarValidDeclaration]
  ) [ProgramVarDeclarating]
  MethodDeclaratingList(
    MethodDeclaratingList(
      MethodDeclaratingEpsilon(
      ) [MethodDeclaratingEpsilon]
      MethodDeclarating(
        MethodTypeDeclarating(
          Type(
           int
          ) [Type]
         inc
        ) [MethodTypeDeclarating]
        NoMethodParams(
        ) [NoMethodParams]
        VarsDeclarating(
          VarsDeclarating(
            VarsDeclaratingEpsilon(
            ) [VarsDeclaratingEpsilon]
            VarValidDeclaration(
              Type(
               int
              ) [Type]
              VarListSingle(
                VarMember(
                 broj
                ) [VarMember]
              ) [VarListSingle]
            ) [VarValidDeclaration]
          ) [VarsDeclarating]
          VarValidDeclaration(
            Type(
             Broj
            ) [Type]
            VarListSingle(
              VarMember(
               enumInstance
              ) [VarMember]
            ) [VarListSingle]
          ) [VarValidDeclaration]
        ) [VarsDeclarating]
        StatementListDeclaring(
          StatementListDeclaring(
            StatementEpsilon(
            ) [StatementEpsilon]
            StatementDesignating(
              DesignatorAssignExpression(
                DesignatorDeclaration(
                 broj
                ) [DesignatorDeclaration]
                AssignOperation(
                ) [AssignOperation]
                Expression(
                  MinusOptionalNoValue(
                  ) [MinusOptionalNoValue]
                  ExpressionAddTermEpsilon(
                    TermMulListMember(
                      TermMulEpsion(
                        FactorDesignating(
                          DesignatorDeclaration(
                           broj
                          ) [DesignatorDeclaration]
                          FactorActualParemeterOptionalNoValue(
                          ) [FactorActualParemeterOptionalNoValue]
                        ) [FactorDesignating]
                      ) [TermMulEpsion]
                      MulopMul(
                      ) [MulopMul]
                      FactorDesignating(
                        DesignatorDeclaration(
                         enumInstance
                        ) [DesignatorDeclaration]
                        FactorActualParemeterOptionalNoValue(
                        ) [FactorActualParemeterOptionalNoValue]
                      ) [FactorDesignating]
                    ) [TermMulListMember]
                  ) [ExpressionAddTermEpsilon]
                ) [Expression]
              ) [DesignatorAssignExpression]
            ) [StatementDesignating]
          ) [StatementListDeclaring]
          StatementReturn(
            ExpressionOptionalValue(
              Expression(
                MinusOptionalNoValue(
                ) [MinusOptionalNoValue]
                ExpressionAddTermListMember(
                  ExpressionAddTermEpsilon(
                    TermMulEpsion(
                      FactorDesignating(
                        DesignatorDeclaration(
                         broj
                        ) [DesignatorDeclaration]
                        FactorActualParemeterOptionalNoValue(
                        ) [FactorActualParemeterOptionalNoValue]
                      ) [FactorDesignating]
                    ) [TermMulEpsion]
                  ) [ExpressionAddTermEpsilon]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulEpsion(
                    FactorDesignating(
                      DesignatorDot(
                       Broj
                       JEDAN
                      ) [DesignatorDot]
                      FactorActualParemeterOptionalNoValue(
                      ) [FactorActualParemeterOptionalNoValue]
                    ) [FactorDesignating]
                  ) [TermMulEpsion]
                ) [ExpressionAddTermListMember]
              ) [Expression]
            ) [ExpressionOptionalValue]
          ) [StatementReturn]
        ) [StatementListDeclaring]
      ) [MethodDeclarating]
    ) [MethodDeclaratingList]
    MethodDeclarating(
      MethodVoidDeclarating(
       mul
      ) [MethodVoidDeclarating]
      NoMethodParams(
      ) [NoMethodParams]
      VarsDeclarating(
        VarsDeclaratingEpsilon(
        ) [VarsDeclaratingEpsilon]
        VarValidDeclaration(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarMember(
             nikola
            ) [VarMember]
          ) [VarListSingle]
        ) [VarValidDeclaration]
      ) [VarsDeclarating]
      StatementListDeclaring(
        StatementListDeclaring(
          StatementListDeclaring(
            StatementListDeclaring(
              StatementListDeclaring(
                StatementListDeclaring(
                  StatementEpsilon(
                  ) [StatementEpsilon]
                  StatementDesignating(
                    DesignatorAssignExpression(
                      DesignatorDeclaration(
                       matija
                      ) [DesignatorDeclaration]
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        MinusOptionalNoValue(
                        ) [MinusOptionalNoValue]
                        ExpressionAddTermListMember(
                          ExpressionAddTermEpsilon(
                            TermMulEpsion(
                              FactorDesignating(
                                DesignatorDeclaration(
                                 matija
                                ) [DesignatorDeclaration]
                                FactorActualParemeterOptionalNoValue(
                                ) [FactorActualParemeterOptionalNoValue]
                              ) [FactorDesignating]
                            ) [TermMulEpsion]
                          ) [ExpressionAddTermEpsilon]
                          AddopPlus(
                          ) [AddopPlus]
                          TermMulEpsion(
                            FactorNum(
                             3
                            ) [FactorNum]
                          ) [TermMulEpsion]
                        ) [ExpressionAddTermListMember]
                      ) [Expression]
                    ) [DesignatorAssignExpression]
                  ) [StatementDesignating]
                ) [StatementListDeclaring]
                StatementDesignating(
                  DesignatorAssignExpression(
                    DesignatorDeclaration(
                     matija
                    ) [DesignatorDeclaration]
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      MinusOptionalNoValue(
                      ) [MinusOptionalNoValue]
                      ExpressionAddTermListMember(
                        ExpressionAddTermEpsilon(
                          TermMulEpsion(
                            FactorDesignating(
                              DesignatorDeclaration(
                               nikola
                              ) [DesignatorDeclaration]
                              FactorActualParemeterOptionalNoValue(
                              ) [FactorActualParemeterOptionalNoValue]
                            ) [FactorDesignating]
                          ) [TermMulEpsion]
                        ) [ExpressionAddTermEpsilon]
                        AddopPlus(
                        ) [AddopPlus]
                        TermMulEpsion(
                          FactorDesignating(
                            DesignatorArray(
                              ArrayDesignator(
                                DesignatorDeclaration(
                                 niz
                                ) [DesignatorDeclaration]
                              ) [ArrayDesignator]
                              Expression(
                                MinusOptionalNoValue(
                                ) [MinusOptionalNoValue]
                                ExpressionAddTermEpsilon(
                                  TermMulEpsion(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [TermMulEpsion]
                                ) [ExpressionAddTermEpsilon]
                              ) [Expression]
                            ) [DesignatorArray]
                            FactorActualParemeterOptionalNoValue(
                            ) [FactorActualParemeterOptionalNoValue]
                          ) [FactorDesignating]
                        ) [TermMulEpsion]
                      ) [ExpressionAddTermListMember]
                    ) [Expression]
                  ) [DesignatorAssignExpression]
                ) [StatementDesignating]
              ) [StatementListDeclaring]
              StatementDesignating(
                DesignatorAssignExpression(
                  DesignatorDeclaration(
                   matija
                  ) [DesignatorDeclaration]
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    MinusOptionalNoValue(
                    ) [MinusOptionalNoValue]
                    ExpressionAddTermListMember(
                      ExpressionAddTermEpsilon(
                        TermMulEpsion(
                          FactorNum(
                           3
                          ) [FactorNum]
                        ) [TermMulEpsion]
                      ) [ExpressionAddTermEpsilon]
                      AddopPlus(
                      ) [AddopPlus]
                      TermMulEpsion(
                        FactorNum(
                         3
                        ) [FactorNum]
                      ) [TermMulEpsion]
                    ) [ExpressionAddTermListMember]
                  ) [Expression]
                ) [DesignatorAssignExpression]
              ) [StatementDesignating]
            ) [StatementListDeclaring]
            StatementRead(
              DesignatorDeclaration(
               matija
              ) [DesignatorDeclaration]
            ) [StatementRead]
          ) [StatementListDeclaring]
          StatementRead(
            DesignatorArray(
              ArrayDesignator(
                DesignatorDeclaration(
                 niz
                ) [DesignatorDeclaration]
              ) [ArrayDesignator]
              Expression(
                MinusOptionalNoValue(
                ) [MinusOptionalNoValue]
                ExpressionAddTermEpsilon(
                  TermMulEpsion(
                    FactorNum(
                     2
                    ) [FactorNum]
                  ) [TermMulEpsion]
                ) [ExpressionAddTermEpsilon]
              ) [Expression]
            ) [DesignatorArray]
          ) [StatementRead]
        ) [StatementListDeclaring]
        StatementReturn(
          ExpressionOptionalValue(
            Expression(
              MinusOptionalNoValue(
              ) [MinusOptionalNoValue]
              ExpressionAddTermEpsilon(
                TermMulEpsion(
                  FactorNum(
                   2
                  ) [FactorNum]
                ) [TermMulEpsion]
              ) [ExpressionAddTermEpsilon]
            ) [Expression]
          ) [ExpressionOptionalValue]
        ) [StatementReturn]
      ) [StatementListDeclaring]
    ) [MethodDeclarating]
  ) [MethodDeclaratingList]
) [Program]
INFO  01:02:03,699 - Koristi se lokalna promenljiva Var broj: int, 0, 1  na liniji 21
INFO  01:02:03,700 - Koristi se lokalna promenljiva Var broj: int, 0, 1  na liniji 21
INFO  01:02:03,700 - Koristi se lokalna promenljiva Var enumInstance: , 1, 1  na liniji 21
INFO  01:02:03,700 - Koristi se lokalna promenljiva Var broj: int, 0, 1  na liniji 23
INFO  01:02:03,700 - Pristupamo clanu enuma `Broj.JEDAN`  na liniji 23
INFO  01:02:03,700 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 29
INFO  01:02:03,700 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 29
INFO  01:02:03,700 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 30
INFO  01:02:03,700 - Koristi se lokalna promenljiva Var nikola: int, 0, 1  na liniji 30
INFO  01:02:03,700 - Koristi se globalna promenljiva Var niz: Arr of int, 1, 0  na liniji 30
INFO  01:02:03,700 - Prostupamo clanu niza niz na liniji 30
INFO  01:02:03,700 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 31
INFO  01:02:03,700 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 32
INFO  01:02:03,700 - Koristi se globalna promenljiva Var niz: Arr of int, 1, 0  na liniji 33
INFO  01:02:03,700 - Prostupamo clanu niza niz na liniji 33
INFO  01:02:03,700 - Print calls = 0
INFO  01:02:03,701 - Generating bytecode file: /home/matijalukic/Desktop/ppProjekat/projekat/MJCompiler/test/program.obj
INFO  01:02:03,702 - Parsiranje uspesno zavrseno!
