INFO  00:57:17,520 - Compiling source file: /home/matijalukic/Desktop/ppProjekat/projekat/MJCompiler/test/program.mj
INFO  00:57:17,538 - #2 program
INFO  00:57:17,538 - #45 test301
INFO  00:57:17,538 - #10 enum
INFO  00:57:17,538 - #45 Broj
INFO  00:57:17,539 - #40 {
INFO  00:57:17,539 - #45 NULA
INFO  00:57:17,539 - #37 ,
INFO  00:57:17,539 - #45 JEDAN
INFO  00:57:17,539 - #37 ,
INFO  00:57:17,539 - #45 PET
INFO  00:57:17,539 - #29 =
INFO  00:57:17,539 - #44 5
INFO  00:57:17,540 - #37 ,
INFO  00:57:17,540 - #45 DESET
INFO  00:57:17,540 - #29 =
INFO  00:57:17,540 - #44 10
INFO  00:57:17,540 - #41 }
INFO  00:57:17,540 - #7 const
INFO  00:57:17,540 - #45 int
INFO  00:57:17,540 - #45 jedan
INFO  00:57:17,540 - #29 =
INFO  00:57:17,540 - #44 10
INFO  00:57:17,541 - #36 ;
INFO  00:57:17,541 - #7 const
INFO  00:57:17,541 - #45 char
INFO  00:57:17,541 - #45 aa
INFO  00:57:17,541 - #29 =
INFO  00:57:17,541 - #46 2
INFO  00:57:17,541 - #36 ;
INFO  00:57:17,541 - #7 const
INFO  00:57:17,541 - #45 int
INFO  00:57:17,542 - #45 pet
INFO  00:57:17,542 - #29 =
INFO  00:57:17,542 - #44 5
INFO  00:57:17,542 - #36 ;
INFO  00:57:17,542 - #7 const
INFO  00:57:17,542 - #45 bool
INFO  00:57:17,542 - #45 tri
INFO  00:57:17,542 - #29 =
INFO  00:57:17,542 - #47 false
INFO  00:57:17,542 - #36 ;
INFO  00:57:17,543 - #45 int
INFO  00:57:17,543 - #45 matija
INFO  00:57:17,543 - #36 ;
INFO  00:57:17,543 - #45 int
INFO  00:57:17,543 - #45 niz
INFO  00:57:17,543 - #42 [
INFO  00:57:17,543 - #43 ]
INFO  00:57:17,543 - #36 ;
INFO  00:57:17,543 - #45 char
INFO  00:57:17,543 - #45 niz3
INFO  00:57:17,543 - #42 [
INFO  00:57:17,543 - #43 ]
INFO  00:57:17,543 - #36 ;
INFO  00:57:17,544 - #40 {
INFO  00:57:17,544 - #45 int
INFO  00:57:17,544 - #45 inc
INFO  00:57:17,544 - #38 (
INFO  00:57:17,544 - #39 )
INFO  00:57:17,544 - #45 int
INFO  00:57:17,545 - #45 broj
INFO  00:57:17,545 - #36 ;
INFO  00:57:17,545 - #40 {
INFO  00:57:17,545 - #5 return
INFO  00:57:17,545 - #45 broj
INFO  00:57:17,545 - #22 +
INFO  00:57:17,546 - #45 Broj
INFO  00:57:17,546 - #19 .
INFO  00:57:17,546 - #45 JEDAN
INFO  00:57:17,546 - #36 ;
INFO  00:57:17,547 - #41 }
INFO  00:57:17,547 - #6 void
INFO  00:57:17,547 - #45 mul
INFO  00:57:17,547 - #38 (
INFO  00:57:17,547 - #39 )
INFO  00:57:17,547 - #40 {
INFO  00:57:17,547 - #45 matija
INFO  00:57:17,547 - #29 =
INFO  00:57:17,547 - #45 matija
INFO  00:57:17,547 - #26 *
INFO  00:57:17,547 - #44 3
INFO  00:57:17,548 - #36 ;
INFO  00:57:17,548 - #45 matija
INFO  00:57:17,548 - #29 =
INFO  00:57:17,548 - #45 nikola
INFO  00:57:17,548 - #26 *
INFO  00:57:17,548 - #45 matija
INFO  00:57:17,548 - #36 ;
INFO  00:57:17,548 - #45 matija
INFO  00:57:17,548 - #29 =
INFO  00:57:17,548 - #44 3
INFO  00:57:17,548 - #26 *
INFO  00:57:17,549 - #44 3
INFO  00:57:17,549 - #36 ;
INFO  00:57:17,549 - #4 read
INFO  00:57:17,549 - #38 (
INFO  00:57:17,549 - #45 matija
INFO  00:57:17,549 - #39 )
INFO  00:57:17,549 - #36 ;
INFO  00:57:17,549 - #4 read
INFO  00:57:17,549 - #38 (
INFO  00:57:17,549 - #45 niz
INFO  00:57:17,549 - #42 [
INFO  00:57:17,549 - #44 2
INFO  00:57:17,549 - #43 ]
INFO  00:57:17,549 - #39 )
INFO  00:57:17,549 - #36 ;
INFO  00:57:17,549 - #5 return
INFO  00:57:17,550 - #44 2
INFO  00:57:17,550 - #36 ;
INFO  00:57:17,550 - #41 }
INFO  00:57:17,550 - #41 }
INFO  00:57:17,551 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  ProgramVarDeclarating(
    ProgramVarDeclarating(
      ProgramVarDeclarating(
        ProgramConstVarDeclarating(
          ProgramConstVarDeclarating(
            ProgramConstVarDeclarating(
              ProgramConstVarDeclarating(
                ProgramEnumDeclarating(
                  NoProgramVarDeclarating(
                  ) [NoProgramVarDeclarating]
                  EnumDeclarating(
                    EnumName(
                     Broj
                    ) [EnumName]
                    EnumDeclaringNoValue(
                     NULA
                    ) [EnumDeclaringNoValue]
                    EnumDeclaratingListMember(
                      EnumDeclaratingListMember(
                        EnumDeclaratingListMember(
                          NoEnumDeclaringList(
                          ) [NoEnumDeclaringList]
                          EnumDeclaringNoValue(
                           JEDAN
                          ) [EnumDeclaringNoValue]
                        ) [EnumDeclaratingListMember]
                        EnumDeclaringValue(
                         PET
                          AssignOperation(
                          ) [AssignOperation]
                         5
                        ) [EnumDeclaringValue]
                      ) [EnumDeclaratingListMember]
                      EnumDeclaringValue(
                       DESET
                        AssignOperation(
                        ) [AssignOperation]
                       10
                      ) [EnumDeclaringValue]
                    ) [EnumDeclaratingListMember]
                  ) [EnumDeclarating]
                ) [ProgramEnumDeclarating]
                ConstVarDeclarating(
                  NumConst(
                    Type(
                     int
                    ) [Type]
                   jedan
                    AssignOperation(
                    ) [AssignOperation]
                   10
                  ) [NumConst]
                  NoConstDeclaration(
                  ) [NoConstDeclaration]
                ) [ConstVarDeclarating]
              ) [ProgramConstVarDeclarating]
              ConstVarDeclarating(
                CharConst(
                  Type(
                   char
                  ) [Type]
                 aa
                  AssignOperation(
                  ) [AssignOperation]
                 2
                ) [CharConst]
                NoConstDeclaration(
                ) [NoConstDeclaration]
              ) [ConstVarDeclarating]
            ) [ProgramConstVarDeclarating]
            ConstVarDeclarating(
              NumConst(
                Type(
                 int
                ) [Type]
               pet
                AssignOperation(
                ) [AssignOperation]
               5
              ) [NumConst]
              NoConstDeclaration(
              ) [NoConstDeclaration]
            ) [ConstVarDeclarating]
          ) [ProgramConstVarDeclarating]
          ConstVarDeclarating(
            BoolConst(
              Type(
               bool
              ) [Type]
             tri
              AssignOperation(
              ) [AssignOperation]
             false
            ) [BoolConst]
            NoConstDeclaration(
            ) [NoConstDeclaration]
          ) [ConstVarDeclarating]
        ) [ProgramConstVarDeclarating]
        VarValidDeclaration(
          Type(
           int
          ) [Type]
          VarListSingle(
            VarMember(
             matija
            ) [VarMember]
          ) [VarListSingle]
        ) [VarValidDeclaration]
      ) [ProgramVarDeclarating]
      VarValidDeclaration(
        Type(
         int
        ) [Type]
        VarListSingle(
          VarArray(
           niz
          ) [VarArray]
        ) [VarListSingle]
      ) [VarValidDeclaration]
    ) [ProgramVarDeclarating]
    VarValidDeclaration(
      Type(
       char
      ) [Type]
      VarListSingle(
        VarArray(
         niz3
        ) [VarArray]
      ) [VarListSingle]
    ) [VarValidDeclaration]
  ) [ProgramVarDeclarating]
  MethodDeclaratingList(
    MethodDeclaratingList(
      MethodDeclaratingEpsilon(
      ) [MethodDeclaratingEpsilon]
      MethodDeclarating(
        MethodTypeDeclarating(
          Type(
           int
          ) [Type]
         inc
        ) [MethodTypeDeclarating]
        NoMethodParams(
        ) [NoMethodParams]
        VarsDeclarating(
          VarsDeclaratingEpsilon(
          ) [VarsDeclaratingEpsilon]
          VarValidDeclaration(
            Type(
             int
            ) [Type]
            VarListSingle(
              VarMember(
               broj
              ) [VarMember]
            ) [VarListSingle]
          ) [VarValidDeclaration]
        ) [VarsDeclarating]
        StatementListDeclaring(
          StatementEpsilon(
          ) [StatementEpsilon]
          StatementReturn(
            ExpressionOptionalValue(
              Expression(
                MinusOptionalNoValue(
                ) [MinusOptionalNoValue]
                ExpressionAddTermListMember(
                  ExpressionAddTermEpsilon(
                    TermMulEpsion(
                      FactorDesignating(
                        DesignatorDeclaration(
                         broj
                        ) [DesignatorDeclaration]
                        FactorActualParemeterOptionalNoValue(
                        ) [FactorActualParemeterOptionalNoValue]
                      ) [FactorDesignating]
                    ) [TermMulEpsion]
                  ) [ExpressionAddTermEpsilon]
                  AddopPlus(
                  ) [AddopPlus]
                  TermMulEpsion(
                    FactorDesignating(
                      DesignatorDot(
                       Broj
                       JEDAN
                      ) [DesignatorDot]
                      FactorActualParemeterOptionalNoValue(
                      ) [FactorActualParemeterOptionalNoValue]
                    ) [FactorDesignating]
                  ) [TermMulEpsion]
                ) [ExpressionAddTermListMember]
              ) [Expression]
            ) [ExpressionOptionalValue]
          ) [StatementReturn]
        ) [StatementListDeclaring]
      ) [MethodDeclarating]
    ) [MethodDeclaratingList]
    MethodDeclarating(
      MethodVoidDeclarating(
       mul
      ) [MethodVoidDeclarating]
      NoMethodParams(
      ) [NoMethodParams]
      VarsDeclaratingEpsilon(
      ) [VarsDeclaratingEpsilon]
      StatementListDeclaring(
        StatementListDeclaring(
          StatementListDeclaring(
            StatementListDeclaring(
              StatementListDeclaring(
                StatementListDeclaring(
                  StatementEpsilon(
                  ) [StatementEpsilon]
                  StatementDesignating(
                    DesignatorAssignExpression(
                      DesignatorDeclaration(
                       matija
                      ) [DesignatorDeclaration]
                      AssignOperation(
                      ) [AssignOperation]
                      Expression(
                        MinusOptionalNoValue(
                        ) [MinusOptionalNoValue]
                        ExpressionAddTermEpsilon(
                          TermMulListMember(
                            TermMulEpsion(
                              FactorDesignating(
                                DesignatorDeclaration(
                                 matija
                                ) [DesignatorDeclaration]
                                FactorActualParemeterOptionalNoValue(
                                ) [FactorActualParemeterOptionalNoValue]
                              ) [FactorDesignating]
                            ) [TermMulEpsion]
                            MulopMul(
                            ) [MulopMul]
                            FactorNum(
                             3
                            ) [FactorNum]
                          ) [TermMulListMember]
                        ) [ExpressionAddTermEpsilon]
                      ) [Expression]
                    ) [DesignatorAssignExpression]
                  ) [StatementDesignating]
                ) [StatementListDeclaring]
                StatementDesignating(
                  DesignatorAssignExpression(
                    DesignatorDeclaration(
                     matija
                    ) [DesignatorDeclaration]
                    AssignOperation(
                    ) [AssignOperation]
                    Expression(
                      MinusOptionalNoValue(
                      ) [MinusOptionalNoValue]
                      ExpressionAddTermEpsilon(
                        TermMulListMember(
                          TermMulEpsion(
                            FactorDesignating(
                              DesignatorDeclaration(
                               nikola
                              ) [DesignatorDeclaration]
                              FactorActualParemeterOptionalNoValue(
                              ) [FactorActualParemeterOptionalNoValue]
                            ) [FactorDesignating]
                          ) [TermMulEpsion]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignating(
                            DesignatorDeclaration(
                             matija
                            ) [DesignatorDeclaration]
                            FactorActualParemeterOptionalNoValue(
                            ) [FactorActualParemeterOptionalNoValue]
                          ) [FactorDesignating]
                        ) [TermMulListMember]
                      ) [ExpressionAddTermEpsilon]
                    ) [Expression]
                  ) [DesignatorAssignExpression]
                ) [StatementDesignating]
              ) [StatementListDeclaring]
              StatementDesignating(
                DesignatorAssignExpression(
                  DesignatorDeclaration(
                   matija
                  ) [DesignatorDeclaration]
                  AssignOperation(
                  ) [AssignOperation]
                  Expression(
                    MinusOptionalNoValue(
                    ) [MinusOptionalNoValue]
                    ExpressionAddTermEpsilon(
                      TermMulListMember(
                        TermMulEpsion(
                          FactorNum(
                           3
                          ) [FactorNum]
                        ) [TermMulEpsion]
                        MulopMul(
                        ) [MulopMul]
                        FactorNum(
                         3
                        ) [FactorNum]
                      ) [TermMulListMember]
                    ) [ExpressionAddTermEpsilon]
                  ) [Expression]
                ) [DesignatorAssignExpression]
              ) [StatementDesignating]
            ) [StatementListDeclaring]
            StatementRead(
              DesignatorDeclaration(
               matija
              ) [DesignatorDeclaration]
            ) [StatementRead]
          ) [StatementListDeclaring]
          StatementRead(
            DesignatorArray(
              ArrayDesignator(
                DesignatorDeclaration(
                 niz
                ) [DesignatorDeclaration]
              ) [ArrayDesignator]
              Expression(
                MinusOptionalNoValue(
                ) [MinusOptionalNoValue]
                ExpressionAddTermEpsilon(
                  TermMulEpsion(
                    FactorNum(
                     2
                    ) [FactorNum]
                  ) [TermMulEpsion]
                ) [ExpressionAddTermEpsilon]
              ) [Expression]
            ) [DesignatorArray]
          ) [StatementRead]
        ) [StatementListDeclaring]
        StatementReturn(
          ExpressionOptionalValue(
            Expression(
              MinusOptionalNoValue(
              ) [MinusOptionalNoValue]
              ExpressionAddTermEpsilon(
                TermMulEpsion(
                  FactorNum(
                   2
                  ) [FactorNum]
                ) [TermMulEpsion]
              ) [ExpressionAddTermEpsilon]
            ) [Expression]
          ) [ExpressionOptionalValue]
        ) [StatementReturn]
      ) [StatementListDeclaring]
    ) [MethodDeclarating]
  ) [MethodDeclaratingList]
) [Program]
INFO  00:57:17,555 - Koristi se lokalna promenljiva Var broj: int, 0, 1  na liniji 20
INFO  00:57:17,556 - Pristupamo clanu enuma `Broj.JEDAN`  na liniji 20
INFO  00:57:17,556 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 25
INFO  00:57:17,556 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 25
INFO  00:57:17,556 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 26
ERROR 00:57:17,556 - Identifikator `nikola` nije deklarisan! na liniji 26
INFO  00:57:17,556 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 26
ERROR 00:57:17,559 - Greska nekompatibilni tipovi u izrazu! na liniji 26
ERROR 00:57:17,559 - Tipovi nisu kompatibilni za dodelu vrednosti! na liniji 26
INFO  00:57:17,559 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 27
INFO  00:57:17,559 - Koristi se globalna promenljiva Var matija: int, 0, 0  na liniji 28
INFO  00:57:17,559 - Koristi se globalna promenljiva Var niz: Arr of int, 1, 0  na liniji 29
INFO  00:57:17,559 - Prostupamo clanu niza niz na liniji 29
INFO  00:57:17,559 - Print calls = 0
ERROR 00:57:17,559 - Parsiranje NIJE uspesno zavrseno!
